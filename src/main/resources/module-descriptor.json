{"name":"module-mongodb","displayName":"module-mongodb","components":[{"hidden":false,"displayName":"MongoDB Count","description":"Counts the documents from the given database collection using the configured connection. The connection configuration allows to specify host, port, database name, username and password to be used for authentication against the database. If the query is not empty, only the documents matching the query filter will be taken in consideration by the count.","fullyQualifiedName":"com.reedelk.mongodb.component.Count","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"MongoDB connection configuration to be used by this count operation. Shared configurations use the same MongoDB client.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"MongoDB Connection","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.mongodb.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"mongodb://localhost:27017","initValue":"mongodb://localhost:27017","hintValue":"mongodb://localhost:27017","description":"The connection URL is a string that a MongoDB driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myMongoDBUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myMongoDBUser","description":"The username to be used to create the MongoDB connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myMongoDBPassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the MongoDB connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"database","example":"myOrdersDatabase","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabase","description":"The database name we want to connect to","displayName":"Database Name","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"collection","example":"MyCollection","initValue":"###USE_DEFAULT_VALUE###","hintValue":"MyCollection","description":"Sets the name of the collection to be used for the count operation.","displayName":"Collection","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"query","example":"{ age: 35 } ","initValue":"###USE_DEFAULT_VALUE###","hintValue":"{ name: \u0027John\u0027 }","description":"Sets the query filter to be applied to the count operation. If no query is present all the documents from the given collections will be counted.","displayName":"Query Filter","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"}},"whens":[]}]},{"hidden":false,"displayName":"MongoDB Delete (One/Many)","description":"Deletes one or more documents from a database on the specified collection. The connection configuration allows to specify host, port, database name, username and password to be used for authentication against the database. A static or dynamic query filter can be applied to the delete operation to \u003cb\u003eonly\u003c/b\u003e match the documents to be deleted.The many property allows to delete \u003cb\u003eall\u003c/b\u003e the documents matching the query filter (Delete Many), otherwise just one document matching the query filter will be deleted (Delete One).","fullyQualifiedName":"com.reedelk.mongodb.component.Delete","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"MongoDB connection configuration to be used by this delete operation. Shared configurations use the same MongoDB client.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"MongoDB Connection","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.mongodb.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"mongodb://localhost:27017","initValue":"mongodb://localhost:27017","hintValue":"mongodb://localhost:27017","description":"The connection URL is a string that a MongoDB driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myMongoDBUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myMongoDBUser","description":"The username to be used to create the MongoDB connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myMongoDBPassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the MongoDB connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"database","example":"myOrdersDatabase","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabase","description":"The database name we want to connect to","displayName":"Database Name","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"collection","example":"MyCollection","initValue":"###USE_DEFAULT_VALUE###","hintValue":"MyCollection","description":"Sets the name of the collection to be used for the delete operation.","displayName":"Collection","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"query","initValue":"{ _id: 2 }","description":"Sets the query filter to be applied to the delete operation. If no query is present the message payload will be used as query filter.","displayName":"Query Filter","defaultValue":"#[message.payload()","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"}},"whens":[]},{"name":"many","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"If true deletes all the documents matching the query filter, otherwise only one will be delete.","displayName":"Delete Many","defaultValue":"false","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[]}]},{"hidden":false,"displayName":"MongoDB Find","description":"Finds one or more documents from the specified database collection. The connection configuration allows to specify host, port, database name, username and password to be used for authentication against the database. A static or dynamic query filter can be applied to the find operation to filter the results. This component allows to specify the mime type of the output. If you need to further process the result set in a script, it is recommended to output \u0027application/java\u0027 in order to avoid further conversion from JSON to Object. If you need the result as is, then keep \u0027application/json\u0027 as output mime type.","fullyQualifiedName":"com.reedelk.mongodb.component.Find","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"MongoDB connection configuration to be used by this find operation. Shared configurations use the same MongoDB client.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"MongoDB Connection","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.mongodb.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"mongodb://localhost:27017","initValue":"mongodb://localhost:27017","hintValue":"mongodb://localhost:27017","description":"The connection URL is a string that a MongoDB driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myMongoDBUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myMongoDBUser","description":"The username to be used to create the MongoDB connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myMongoDBPassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the MongoDB connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"database","example":"myOrdersDatabase","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabase","description":"The database name we want to connect to","displayName":"Database Name","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"collection","example":"MyCollection","initValue":"###USE_DEFAULT_VALUE###","hintValue":"MyCollection","description":"Sets the name of the collection to be used for the find operation.","displayName":"Collection","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"query","example":"\u003cul\u003e\u003cli\u003e{ _id: 5 }\u003c/li\u003e\u003cli\u003e{ \"name.last\": \"Hopper\" }\u003c/li\u003e\u003cli\u003e{ _id: { $in: [ 5, ObjectId(\"507c35dd8fada716c89d0013\") ] } }\u003c/li\u003e\u003cli\u003e{ birth: { $gt: new Date(\u00271950-01-01\u0027) } }\u003c/li\u003e\u003cli\u003e{ \"name.last\": { $regex: /^N/ } }\u003c/li\u003e\u003cli\u003e{\n   birth: { $gt: new Date(\u00271920-01-01\u0027) },\n   death: { $exists: false }\n}\u003c/li\u003e\u003cli\u003e\u003ccode\u003econtext.myFindFilter\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","initValue":"###USE_DEFAULT_VALUE###","hintValue":"{ \"name.last\": \"Hopper\" }","description":"Sets the query filter to be applied to the find operation. If no filter is present all the documents from the given collection will be retrieved.","displayName":"Query Filter","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"}},"whens":[]},{"name":"mimeType","initValue":"###USE_DEFAULT_VALUE###","description":"Sets the mime type of the output. If output is application/json, then the content is a JSON String containing the results of the find operation. Use this output type if you don\u0027t need to further process the result. If output is application/java, the output is a List of Map which can be used righ away from the script language to do further processing of the results.","displayName":"Out mime type","defaultValue":"application/json","type":{"classname":"com.reedelk.module.descriptor.model.property.ComboDescriptor","instance":{"editable":false,"comboValues":["application/json","application/java"],"type":"com.reedelk.runtime.api.annotation.Combo"}},"whens":[]}]},{"hidden":false,"displayName":"MongoDB Insert (One/Many)","description":"Inserts one or more documents into the given database collection. The connection configuration allows to specify host, port, database name, username and password to be used for authentication against the database. The input document can be a static or a dynamic expression. By default the message payload is used as a document to be inserted. The input document could be a JSON string, a Map, a Pair or a DataRow (Insert One). If the input is a list every item in the list will be considered as a separate document and all the documents in the list will be inserted (Insert Many). ","fullyQualifiedName":"com.reedelk.mongodb.component.Insert","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"MongoDB connection configuration to be used by this insert operation. Shared configurations use the same MongoDB client.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"MongoDB Connection","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.mongodb.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"mongodb://localhost:27017","initValue":"mongodb://localhost:27017","hintValue":"mongodb://localhost:27017","description":"The connection URL is a string that a MongoDB driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myMongoDBUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myMongoDBUser","description":"The username to be used to create the MongoDB connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myMongoDBPassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the MongoDB connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"database","example":"myOrdersDatabase","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabase","description":"The database name we want to connect to","displayName":"Database Name","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"collection","example":"MyCollection","initValue":"###USE_DEFAULT_VALUE###","hintValue":"MyCollection","description":"Sets the name of the collection to be used for the insert operation.","displayName":"Collection","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"document","initValue":"#[message.payload()]","description":"Sets the document to be inserted into the database. The input document can be a static or a dynamic expression. The input document could be a JSON string, Map, Pair or DataRow (Insert One). If the input is a list every item in the list will be considered a document to be inserted and all the documents in the list will be inserted in batch (Insert Many).","displayName":"Insert Document","defaultValue":"#[message.payload()","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"}},"whens":[]}]},{"hidden":false,"displayName":"MongoDB Update (One/Many)","description":"Updates one or more documents into the given database collection. The connection configuration allows to specify host, port, database name, username and password to be used for authentication against the database. If the query filter expression is not empty, the query will be used to match only the document/s to be updated with the update document. The update document can be a static or a dynamic expression. The update document might be a JSON string, a Map, a Pair or a DataRow (Update One).If the property many is true, \u003cb\u003eall\u003c/b\u003e the documents matching the given query filter will be updated (Update Many).","fullyQualifiedName":"com.reedelk.mongodb.component.Update","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"MongoDB connection configuration to be used by this update operation. Shared configurations use the same MongoDB client.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"MongoDB Connection","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.mongodb.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"mongodb://localhost:27017","initValue":"mongodb://localhost:27017","hintValue":"mongodb://localhost:27017","description":"The connection URL is a string that a MongoDB driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myMongoDBUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myMongoDBUser","description":"The username to be used to create the MongoDB connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myMongoDBPassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the MongoDB connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"database","example":"myOrdersDatabase","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabase","description":"The database name we want to connect to","displayName":"Database Name","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"collection","example":"MyCollection","initValue":"###USE_DEFAULT_VALUE###","hintValue":"MyCollection","description":"Sets the name of the collection to be used for the update operation.","displayName":"Collection","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"query","example":"\u003cul\u003e\u003cli\u003e{ _id: 1 }\u003c/li\u003e\u003cli\u003e\u003ccode\u003e{ _id: message.attributes().id }\u003c/code\u003e\u003c/li\u003e\u003cli\u003e{ name: \"Andy\" }\u003c/li\u003e\u003c/ul\u003e","initValue":"{ _id: 1 }","hintValue":"{ item: \"BLP921\" }","description":"Sets the selection criteria for the update. It could be a static or dynamic value.","displayName":"Query Filter","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"}},"whens":[]},{"name":"document","initValue":"#[message.payload()]","description":"The update document to be used to update one or all the documents matching the query filter.","displayName":"Update Document","defaultValue":"#[message.payload()","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"}},"whens":[]},{"name":"many","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"If true updates all the documents matching the query filter, otherwise only one will be updated.","displayName":"Update Many","defaultValue":"false","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[]}]}],"types":[{"global":false,"type":"com.reedelk.mongodb.internal.attribute.DeleteAttributes","extendsType":"com.reedelk.runtime.api.message.MessageAttributes","displayName":"Map","description":"","functions":[],"properties":[{"name":"acknowledge","type":"boolean","example":"","description":""},{"name":"deletedCount","type":"long","example":"","description":""}]},{"global":false,"type":"com.reedelk.mongodb.internal.attribute.UpdateAttributes","extendsType":"com.reedelk.runtime.api.message.MessageAttributes","displayName":"Map","description":"","functions":[],"properties":[{"name":"matchedCount","type":"long","example":"","description":""},{"name":"upsertedId","type":"java.lang.String","example":"","description":""}]}]}